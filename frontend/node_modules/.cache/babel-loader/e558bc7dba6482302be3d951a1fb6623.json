{"ast":null,"code":"var _jsxFileName = \"/Users/juzharsingh/Desktop/web_development/projects/review_app/frontend/src/context/ThemeProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst defaultTheme = \"light\";\nconst darkTheme = \"dark\";\nexport default function ThemeProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const toggleTheme = () => {\n    const oldTheme = getTheme();\n    const newTheme = oldTheme === defaultTheme ? darkTheme : defaultTheme;\n    updateTheme(newTheme, oldTheme);\n  };\n  useEffect(() => {\n    const theme = getTheme();\n    if (!theme) updateTheme(defaultTheme);else updateTheme(theme);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ThemeProvider;\nconst getTheme = () => localStorage.getItem(\"theme\");\nconst updateTheme = (theme, themeToRemove) => {\n  if (themeToRemove) document.documentElement.classList.remove(themeToRemove);\n  document.documentElement.classList.add(theme);\n  localStorage.setItem(\"theme\", theme);\n};\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useEffect","ThemeContext","defaultTheme","darkTheme","ThemeProvider","children","toggleTheme","oldTheme","getTheme","newTheme","updateTheme","theme","localStorage","getItem","themeToRemove","document","documentElement","classList","remove","add","setItem"],"sources":["/Users/juzharsingh/Desktop/web_development/projects/review_app/frontend/src/context/ThemeProvider.js"],"sourcesContent":["import React, { createContext, useEffect } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst defaultTheme = \"light\";\nconst darkTheme = \"dark\";\n\nexport default function ThemeProvider({ children }) {\n  const toggleTheme = () => {\n    const oldTheme = getTheme();\n    const newTheme = oldTheme === defaultTheme ? darkTheme : defaultTheme;\n\n    updateTheme(newTheme, oldTheme);\n  };\n\n  useEffect(() => {\n    const theme = getTheme();\n    if (!theme) updateTheme(defaultTheme);\n    else updateTheme(theme);\n  }, []);\n\n  return (\n    <ThemeContext.Provider value={{ toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nconst getTheme = () => localStorage.getItem(\"theme\");\n\nconst updateTheme = (theme, themeToRemove) => {\n  if (themeToRemove) document.documentElement.classList.remove(themeToRemove);\n  document.documentElement.classList.add(theme);\n  localStorage.setItem(\"theme\", theme);\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAExD,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAE;AAE3C,MAAMG,YAAY,GAAG,OAAO;AAC5B,MAAMC,SAAS,GAAG,MAAM;AAExB,eAAe,SAASC,aAAa,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChD,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,QAAQ,GAAGC,QAAQ,EAAE;IAC3B,MAAMC,QAAQ,GAAGF,QAAQ,KAAKL,YAAY,GAAGC,SAAS,GAAGD,YAAY;IAErEQ,WAAW,CAACD,QAAQ,EAAEF,QAAQ,CAAC;EACjC,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGH,QAAQ,EAAE;IACxB,IAAI,CAACG,KAAK,EAAED,WAAW,CAACR,YAAY,CAAC,CAAC,KACjCQ,WAAW,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEL;IAAY,CAAE;IAAA,UAC3CD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE5B;AAAC,GAnBuBD,aAAa;AAAA,KAAbA,aAAa;AAqBrC,MAAMI,QAAQ,GAAG,MAAMI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAEpD,MAAMH,WAAW,GAAG,CAACC,KAAK,EAAEG,aAAa,KAAK;EAC5C,IAAIA,aAAa,EAAEC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAACJ,aAAa,CAAC;EAC3EC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACR,KAAK,CAAC;EAC7CC,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;AACtC,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}